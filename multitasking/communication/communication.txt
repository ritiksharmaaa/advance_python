# communication in thread . 


two or more thread communicate with each other is called communication inside thread 


we hae threee way to communication with thread .
Event 
Condition 
Queue . 


Event : - 

  This is one of the simplest mechanism for communication between thread 1 thread singles an event and other thread wait for it.

Unevent object manager and internal flag that can be shared to true which does set method and reset to falls with dark clear method the weight method block until the flag is true.


create Event object 

import Event from threading 

e = Event()


methods: - 

set() - It said the internal flag to true all threats waiting for it to become true or aquandate thread that call with once the flag is true will not block at all.


clear() -this is Rishabh the internal flag to false subsequently thread calling wait  will block until set is called to set the internal flag to 2true  again.


is_set() - did we run through if and only if the internal flag is true.



wait(timeout=NOne) - it block until the  internal flag is true if the Internet flag is true on entry return immediately otherwise blog until another thread callsset() To set the flag to true oriental option timeout occur.

When the timeout argument is present and not none it should be floating point number satisfying a timeout for the operation in seconds or (fraction thereof)


these methods return true if and only if the internal flag has been set to true either before the wait call or after the wait start so it will always return true except if time out is given and the operation time out.



ex : - 


trafic light 

run if green stop when red 

until green not show stop . 



condition  : - 

conditon class is used to improve speed of communication between thread the condition class object is called condition varibale . 

n = conditIO () here n is confdition variable .

a conditionn varian;e is always associated with some kind of lock this can be passed in or one will be created by default passing one in is usefull when several condiiton variable must share the same lock . the lock is part of the condition object you dont have to track it seperatelty. 

a condition is a more advance version of the event object . 

create condition object : - 


   from threading import  Condition 

   cv = COndition()


   methds : 

     notify(1) -  this method is used to immediately wake up one thred waiting on the condition where n is number of thred need to wake up . 

     notify_all() - this method is used to wake up all thread waiting on the condition .


     wait(timeout=None) - This method wait until notify or until a timeout occurs if the calling thread has not acquired the lock when these method is called a runtime error is raised we terminated when invoke notify function method or notify and score all function methods the return value is true unless a given time out expiredwhen which case it is false.


     
queue :  - 


the queue class of queue moduke is usefull to create a queue that hold th data produce by the producer . 

the data can be taken from the queue and utilized bt the consumer.

fifo - mean first in first out . 

advantage . you dont need to maintaine lock . 


create queue import Queue .
a = Queue()


methods : 

put() - this method is used by producer to insert into queue .

syntax : 

q.put(i) i - item 


get() - this method is used by consu,er to reterive item from the queue .

producer.object.queue.get(i)



empty() - this method return tru if queue is empty else return False . 

full = this method return true if queue is full asle false .








