# crating Thread 

Thread is a class or threading is a module is used to create threats to create our own thread we need to create an object of Thread class.


Following are the way of creating thread:- 

Creating thread without using class - But third classes use there but you don't need to make the classes
- Creating thread by creating a child class two thread class.
- creating a thread without creating child class two thread class.

These are the following methods in making a treds . 



# ------------------without class thread ------------

from threading import Thread 

obj = Thread(target=functionname , args=(args1 , args2 , ... ))# alos a name para learn further . 

target - It represents the function on which the thread will act.

args -it represents a couple of argument which are passed to the function.


-- start - 

Once a thread is created it should be started by calling start() methods .


ex - 

def disp(a , b ):
     print("iam threainf ")

t = Thread(target=disp , args(10 , 20):
t.start()


oy you can call thread multiple time and many way : - 

def disp(a , b ):
     print(threading)
    for i in range(5):
        t = Thread(target=disp , args=(10 , 20))
        t.start()



# ---------------set and get ___------ thread name --: - 

thread have by default there own name .

by default name : - thread_1 _2 _3 and so on . 


current_thread() - Dysfunction return current thread object

getName() - every thread has a name by default to get the name of thread we can use this method.

setName() - this method is used to set the name of Thread

name property - This property is used to get or set name of the Thread


-------------------------------with class ----------------------------


We can create our own threat child class by inheriting thread class from threading module.

class CHildThread(Thread):
    stattement 

t = shuldthread() # object of child thread 

show example in py file 


-methods in thread class 


1 - start()  - Once a thread is created it should be started by calling start methods
2 - run() - every thread will run this method when thread is started we can override the method and write our own code as body of the method a thread will terminate automatically when its come out of the run method.

join() - This method is used to wait till the thread completely executed the run method.


----------------with constructor ----------
seel inpy file . 








------------------------------------------without fucction based or child class beased Thread -------------------------------

# we just want to use it but not want to make thread without childclass or function class . 


We can create an independent thread child class that does not inherit from thread class from threading module.

class thread:
     statemtnet 
object_class = thread() 
thread_object = Thread(target=object_class.function_name , args=(args1 , args2 ))



ex : - 


class myThread():
     def disp(self , a , b ):
         print(a , b )


mthread = myThread()

thread_object = Thread(target= mthear.disp , args=(23 , 34 ))
